{"ast":null,"code":"var _jsxFileName = \"/Users/erosnolasco-mendoza/Documents(non-iCloud)/VSCode/beyondmd_2/jokesapp/src/api/components/Jokes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExampleComponent() {\n  _s();\n  // Declare a new state variable, which we'll call \"data\"\n  const [data, setData] = useState(null);\n\n  // Fetch the data from the API in an async function\n  async function fetchData() {\n    const response = await axios.get('https://v2.jokeapi.dev/joke/Programming,Christmas?blacklistFlags=nsfw,religious,political,racist,sexist,explicit&type=single');\n    setData(response.data);\n  }\n\n  // Use the useEffect hook to fetch the data when the component is mounted\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // If the data is not yet available, return a loading message\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }, this);\n  }\n\n  // Otherwise, display the joke in the component\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"body1\",\n    children: [data.setup, data.delivery]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this);\n}\n_s(ExampleComponent, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = ExampleComponent;\nvar _c;\n$RefreshReg$(_c, \"ExampleComponent\");","map":{"version":3,"names":["React","useState","useEffect","axios","Typography","ExampleComponent","data","setData","fetchData","response","get","setup","delivery"],"sources":["/Users/erosnolasco-mendoza/Documents(non-iCloud)/VSCode/beyondmd_2/jokesapp/src/api/components/Jokes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Typography } from '@material-ui/core';\n\nfunction ExampleComponent() {\n  // Declare a new state variable, which we'll call \"data\"\n  const [data, setData] = useState(null);\n\n  // Fetch the data from the API in an async function\n  async function fetchData() {\n    const response = await axios.get('https://v2.jokeapi.dev/joke/Programming,Christmas?blacklistFlags=nsfw,religious,political,racist,sexist,explicit&type=single');\n    setData(response.data);\n  }\n\n  // Use the useEffect hook to fetch the data when the component is mounted\n  useEffect(() => {\n    fetchData();\n\n  }, []);\n\n  // If the data is not yet available, return a loading message\n  if (!data) {\n  return <p>Loading...</p>;\n  }\n  \n  // Otherwise, display the joke in the component\n  return (\n  <Typography variant=\"body1\">\n  {data.setup}\n  {data.delivery}\n  </Typography>\n  );\n  }"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,mBAAmB;AAAC;AAE/C,SAASC,gBAAgB,GAAG;EAAA;EAC1B;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACA,eAAeO,SAAS,GAAG;IACzB,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,8HAA8H,CAAC;IAChKH,OAAO,CAACE,QAAQ,CAACH,IAAI,CAAC;EACxB;;EAEA;EACAJ,SAAS,CAAC,MAAM;IACdM,SAAS,EAAE;EAEb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAI,CAACF,IAAI,EAAE;IACX,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiB;EACxB;;EAEA;EACA,oBACA,QAAC,UAAU;IAAC,OAAO,EAAC,OAAO;IAAA,WAC1BA,IAAI,CAACK,KAAK,EACVL,IAAI,CAACM,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEb;AAAC,GA5BMP,gBAAgB;AAAA,KAAhBA,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}