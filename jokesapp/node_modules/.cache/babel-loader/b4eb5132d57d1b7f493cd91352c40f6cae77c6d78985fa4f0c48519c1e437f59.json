{"ast":null,"code":"var _jsxFileName = \"/Users/erosnolasco-mendoza/Documents(non-iCloud)/VSCode/beyondmd_2/jokesapp/src/api/components/Jokes.js\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import { useAxios } from \"use-axios-client\";\n\n// export default function App() {\n//   const [{ data, error, loading }, refetch]= useAxios({\n//     url: 'https://v2.jokeapi.dev/joke/Programming,Christmas?blacklistFlags=nsfw,religious,political,racist,sexist,explicit&type=single'\n\n//   });\n\n//   if (loading || !data) return \"Loading... \";\n//   if (error) return \"Error!\";\n\n//   return (\n//     <div>\n//       <button onClick={refetch}>refetch</button>\n//       <pre>{JSON.stringify(data, null, 2)}</pre>\n//     </div>\n//   ) \n// }\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExampleComponent() {\n  _s();\n  // Declare a new state variable, which we'll call \"text\"\n  const [text, setText] = useState(null);\n\n  // Fetch the text from the API in an async function\n  async function fetchText() {\n    const response = await axios.get('https://v2.jokeapi.dev/joke/Programming,Christmas?blacklistFlags=nsfw,religious,political,racist,sexist,explicit&type=single');\n    setText(response.data);\n  }\n\n  // Use the useEffect hook to fetch the text when the component is mounted\n  useEffect(() => {\n    fetchText();\n  }, []);\n\n  // If the text is not yet available, return a loading message\n  if (!text) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Otherwise, display the text in the component\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"body1\",\n    children: datjoke\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(ExampleComponent, \"Ia7+bKH2TeMPqcUhrJrukKDzahc=\");\n_c = ExampleComponent;\nvar _c;\n$RefreshReg$(_c, \"ExampleComponent\");","map":{"version":3,"names":["React","useState","useEffect","axios","Typography","ExampleComponent","text","setText","fetchText","response","get","data","datjoke"],"sources":["/Users/erosnolasco-mendoza/Documents(non-iCloud)/VSCode/beyondmd_2/jokesapp/src/api/components/Jokes.js"],"sourcesContent":["// import React from \"react\";\n// import { useAxios } from \"use-axios-client\";\n\n// export default function App() {\n//   const [{ data, error, loading }, refetch]= useAxios({\n//     url: 'https://v2.jokeapi.dev/joke/Programming,Christmas?blacklistFlags=nsfw,religious,political,racist,sexist,explicit&type=single'\n\n//   });\n\n//   if (loading || !data) return \"Loading... \";\n//   if (error) return \"Error!\";\n\n\n//   return (\n//     <div>\n//       <button onClick={refetch}>refetch</button>\n//       <pre>{JSON.stringify(data, null, 2)}</pre>\n//     </div>\n//   ) \n// }\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Typography } from '@material-ui/core';\n\nexport default function ExampleComponent() {\n  // Declare a new state variable, which we'll call \"text\"\n  const [text, setText] = useState(null);\n\n  // Fetch the text from the API in an async function\n  async function fetchText() {\n    const response = await axios.get('https://v2.jokeapi.dev/joke/Programming,Christmas?blacklistFlags=nsfw,religious,political,racist,sexist,explicit&type=single');\n    setText(response.data);\n  }\n\n  // Use the useEffect hook to fetch the text when the component is mounted\n  useEffect(() => {\n    fetchText();\n  }, []);\n\n  // If the text is not yet available, return a loading message\n  if (!text) {\n    return <p>Loading...</p>;\n  }\n\n  // Otherwise, display the text in the component\n  return (\n    <Typography variant=\"body1\">{datjoke}</Typography>\n  );\n}\n\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,mBAAmB;AAAC;AAE/C,eAAe,SAASC,gBAAgB,GAAG;EAAA;EACzC;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACA,eAAeO,SAAS,GAAG;IACzB,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,8HAA8H,CAAC;IAChKH,OAAO,CAACE,QAAQ,CAACE,IAAI,CAAC;EACxB;;EAEA;EACAT,SAAS,CAAC,MAAM;IACdM,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAI,CAACF,IAAI,EAAE;IACT,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiB;EAC1B;;EAEA;EACA,oBACE,QAAC,UAAU;IAAC,OAAO,EAAC,OAAO;IAAA,UAAEM;EAAO;IAAA;IAAA;IAAA;EAAA,QAAc;AAEtD;AAAC,GAxBuBP,gBAAgB;AAAA,KAAhBA,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}