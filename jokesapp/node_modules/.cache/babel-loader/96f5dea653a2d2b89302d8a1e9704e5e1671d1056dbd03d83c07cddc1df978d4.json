{"ast":null,"code":"var _jsxFileName = \"/Users/erosnolasco-mendoza/Documents(non-iCloud)/VSCode/beyondmd_2/jokesapp/src/api/components/Jokes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { List, ListItem, ListItemText, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ExampleComponent() {\n  _s();\n  // Declare a new state variable, which we'll call \"data\"\n  const [data, setData] = useState(null);\n\n  // Fetch the data from the API in an async function\n  async function fetchData() {\n    try {\n      const response = await axios.get('https://v2.jokeapi.dev/joke/Programming,Christmas?blacklistFlags=nsfw,religious,political,racist,sexist,explicit&type=single');\n      setData(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  // Use the useEffect hook to fetch the data when the component is mounted\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // If the data\n\n  // is not yet available, return a loading message\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 8\n    }, this);\n  }\n\n  // Otherwise, display the joke in the component\n  return /*#__PURE__*/_jsxDEV(List, {\n    children: /*#__PURE__*/_jsxDEV(ListItem, {\n      children: /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: data.setup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 10\n        }, this),\n        secondary: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: data.delivery\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 1\n      }, this)\n    }, data.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 1\n  }, this);\n}\n_s(ExampleComponent, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = ExampleComponent;\nvar _c;\n$RefreshReg$(_c, \"ExampleComponent\");","map":{"version":3,"names":["React","useState","useEffect","axios","List","ListItem","ListItemText","Typography","ExampleComponent","data","setData","fetchData","response","get","error","console","setup","delivery","id"],"sources":["/Users/erosnolasco-mendoza/Documents(non-iCloud)/VSCode/beyondmd_2/jokesapp/src/api/components/Jokes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { List, ListItem, ListItemText, Typography } from '@material-ui/core';\n\nexport function ExampleComponent() {\n  // Declare a new state variable, which we'll call \"data\"\n  const [data, setData] = useState(null);\n\n  // Fetch the data from the API in an async function\n  async function fetchData() {\n    try {\n      const response = await axios.get('https://v2.jokeapi.dev/joke/Programming,Christmas?blacklistFlags=nsfw,religious,political,racist,sexist,explicit&type=single');\n      setData(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  // Use the useEffect hook to fetch the data when the component is mounted\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // If the data\n\n// is not yet available, return a loading message\nif (!data) {\nreturn <p>Loading...</p>;\n}\n\n// Otherwise, display the joke in the component\nreturn (\n<List>\n<ListItem key={data.id}>\n<ListItemText\nprimary={<Typography variant=\"body1\">{data.setup}</Typography>}\nsecondary={<Typography variant=\"body1\">{data.delivery}</Typography>}\n/>\n</ListItem>\n</List>\n);\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,UAAU,QAAQ,mBAAmB;AAAC;AAE7E,OAAO,SAASC,gBAAgB,GAAG;EAAA;EACjC;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACA,eAAeU,SAAS,GAAG;IACzB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,8HAA8H,CAAC;MAChKH,OAAO,CAACE,QAAQ,CAACH,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF;;EAEA;EACAZ,SAAS,CAAC,MAAM;IACdS,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEF;EACA,IAAI,CAACF,IAAI,EAAE;IACX,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiB;EACxB;;EAEA;EACA,oBACA,QAAC,IAAI;IAAA,uBACL,QAAC,QAAQ;MAAA,uBACT,QAAC,YAAY;QACb,OAAO,eAAE,QAAC,UAAU;UAAC,OAAO,EAAC,OAAO;UAAA,UAAEA,IAAI,CAACO;QAAK;UAAA;UAAA;UAAA;QAAA,QAAe;QAC/D,SAAS,eAAE,QAAC,UAAU;UAAC,OAAO,EAAC,OAAO;UAAA,UAAEP,IAAI,CAACQ;QAAQ;UAAA;UAAA;UAAA;QAAA;MAAe;QAAA;QAAA;QAAA;MAAA;IAClE,GAJaR,IAAI,CAACS,EAAE;MAAA;MAAA;MAAA;IAAA;EAKX;IAAA;IAAA;IAAA;EAAA,QACJ;AAEP;AAAC,GArCeV,gBAAgB;AAAA,KAAhBA,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}