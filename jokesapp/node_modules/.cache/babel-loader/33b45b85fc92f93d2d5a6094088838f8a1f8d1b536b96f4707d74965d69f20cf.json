{"ast":null,"code":"var _jsxFileName = \"/Users/erosnolasco-mendoza/Documents(non-iCloud)/VSCode/beyondmd_2/jokesapp/src/api/components/Jokes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { List, ListItem, ListItemText, Typography } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Jokes() {\n  _s();\n  // Declare a new state variable, which we'll call \"data\"\n  const [data, setData] = useState(null);\n\n  // Fetch the data from the API in an async function\n  async function fetchData() {\n    try {\n      const response = await axios.get(\"https://v2.jokeapi.dev/joke/Programming,Christmas?blacklistFlags=nsfw,religious,political,racist,sexist,explicit&type=single\");\n      setData(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  // Use the useEffect hook to fetch the data when the component is mounted\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // If the data is not yet available, return a loading message\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Otherwise, display the joke in the component\n  return /*#__PURE__*/_jsxDEV(List, {\n    children: [/*#__PURE__*/_jsxDEV(ListItem, {\n      children: /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: data.joke\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, data.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), \" variant=\\\"contained\\\" color=\\\"primary\\\" onClick=\", fetchData, \"> New Joke\", /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Jokes, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = Jokes;\nvar _c;\n$RefreshReg$(_c, \"Jokes\");","map":{"version":3,"names":["React","useState","useEffect","axios","List","ListItem","ListItemText","Typography","Jokes","data","setData","fetchData","response","get","error","console","joke","id"],"sources":["/Users/erosnolasco-mendoza/Documents(non-iCloud)/VSCode/beyondmd_2/jokesapp/src/api/components/Jokes.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { List, ListItem, ListItemText, Typography } from \"@material-ui/core\";\n\nexport default function Jokes() {\n  // Declare a new state variable, which we'll call \"data\"\n  const [data, setData] = useState(null);\n\n  // Fetch the data from the API in an async function\n  async function fetchData() {\n    try {\n      const response = await axios.get(\n        \"https://v2.jokeapi.dev/joke/Programming,Christmas?blacklistFlags=nsfw,religious,political,racist,sexist,explicit&type=single\"\n      );\n      setData(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  // Use the useEffect hook to fetch the data when the component is mounted\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // If the data is not yet available, return a loading message\n  if (!data) {\n    return <p>Loading...</p>;\n  }\n\n  // Otherwise, display the joke in the component\n  return (\n    <List>\n      <ListItem key={data.id}>\n        <ListItemText\n          primary={<Typography variant=\"body1\">{data.joke}</Typography>}\n        />\n      </ListItem>\n      <button></button> variant=\"contained\" color=\"primary\" onClick={fetchData}>\n        New Joke\n      <button/>\n    </List>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,UAAU,QAAQ,mBAAmB;AAAC;AAE7E,eAAe,SAASC,KAAK,GAAG;EAAA;EAC9B;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACA,eAAeU,SAAS,GAAG;IACzB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAC9B,8HAA8H,CAC/H;MACDH,OAAO,CAACE,QAAQ,CAACH,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF;;EAEA;EACAZ,SAAS,CAAC,MAAM;IACdS,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAI,CAACF,IAAI,EAAE;IACT,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiB;EAC1B;;EAEA;EACA,oBACE,QAAC,IAAI;IAAA,wBACH,QAAC,QAAQ;MAAA,uBACP,QAAC,YAAY;QACX,OAAO,eAAE,QAAC,UAAU;UAAC,OAAO,EAAC,OAAO;UAAA,UAAEA,IAAI,CAACO;QAAI;UAAA;UAAA;UAAA;QAAA;MAAe;QAAA;QAAA;QAAA;MAAA;IAC9D,GAHWP,IAAI,CAACQ,EAAE;MAAA;MAAA;MAAA;IAAA,QAIX,eACX;MAAA;MAAA;MAAA;IAAA,QAAiB,uDAA8CN,SAAS,6BAExE;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEX;AAAC,GAvCuBH,KAAK;AAAA,KAALA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}