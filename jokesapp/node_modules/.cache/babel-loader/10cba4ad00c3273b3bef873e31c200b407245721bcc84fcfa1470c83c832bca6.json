{"ast":null,"code":"var _jsxFileName = \"/Users/erosnolasco-mendoza/Documents(non-iCloud)/VSCode/beyondmd_2/jokesapp/src/api/components/Jokes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { List, ListItem, ListItemText, Typography, Button, Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  colorPaper: {\n    backgroundColor: \"\"\n  }\n}));\nexport default function Jokes() {\n  _s();\n  const classes = useStyles();\n\n  // Declare a new state variable, which we'll call \"data\"\n  const [data, setData] = useState(null);\n\n  // Fetch the data from the API in an async function\n  async function fetchData() {\n    try {\n      const response = await axios.get(\"https://v2.jokeapi.dev/joke/Programming,Christmas?blacklistFlags=nsfw,religious,political,racist,sexist,explicit&type=single\");\n      setData(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  // Use the useEffect hook to fetch the data when the component is mounted\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // If the data is not yet available, return a loading message\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Otherwise, display the joke in the component\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    variant: \"auto\",\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(List, {\n      className: classes.colorPaper,\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: data.joke\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)\n      }, data.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: fetchData,\n        className: classes.button,\n        children: \"New Joke\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Jokes, \"KREmyJyQC/sWdjKT4Ypeginm/Cc=\", false, function () {\n  return [useStyles];\n});\n_c = Jokes;\n;\nvar _c;\n$RefreshReg$(_c, \"Jokes\");","map":{"version":3,"names":["React","useState","useEffect","axios","List","ListItem","ListItemText","Typography","Button","Paper","makeStyles","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","button","margin","spacing","colorPaper","Jokes","classes","data","setData","fetchData","response","get","error","console","joke","id"],"sources":["/Users/erosnolasco-mendoza/Documents(non-iCloud)/VSCode/beyondmd_2/jokesapp/src/api/components/Jokes.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Button,\n  Paper\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  colorPaper: {\n    backgroundColor: \"\"\n  }\n}));\n\nexport default function Jokes() {\n  const classes = useStyles();\n\n  // Declare a new state variable, which we'll call \"data\"\n  const [data, setData] = useState(null);\n\n  // Fetch the data from the API in an async function\n  async function fetchData() {\n    try {\n      const response = await axios.get(\n        \"https://v2.jokeapi.dev/joke/Programming,Christmas?blacklistFlags=nsfw,religious,political,racist,sexist,explicit&type=single\"\n      );\n      setData(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  // Use the useEffect hook to fetch the data when the component is mounted\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // If the data is not yet available, return a loading message\n  if (!data) {\n    return <p>Loading...</p>;\n  }\n\n  // Otherwise, display the joke in the component\n  return (\n    <Paper variant=\"auto\" className={classes.root}>\n    <List className={classes.colorPaper} className={classes.root}>\n      <ListItem key={data.id}>\n        <ListItemText\n          primary={<Typography variant=\"body1\">{data.joke}</Typography>}\n        />\n      </ListItem>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={fetchData}\n        className={classes.button}\n      >\n        New Joke\n      </Button>\n    </List>\n    </Paper>\n  ); \n};\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,IAAI,EACJC,QAAQ,EACRC,YAAY,EACZC,UAAU,EACVC,MAAM,EACNC,KAAK,QACA,mBAAmB;AAC1B,SAASC,UAAU,QAAQ,0BAA0B;AAAC;AAEtD,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAK,KAAM;EACvCC,IAAI,EAAE;IACJC,KAAK,EAAE,MAAM;IACbC,QAAQ,EAAE,GAAG;IACbC,eAAe,EAAEJ,KAAK,CAACK,OAAO,CAACC,UAAU,CAACC;EAC5C,CAAC;EACDC,MAAM,EAAE;IACNC,MAAM,EAAET,KAAK,CAACU,OAAO,CAAC,CAAC;EACzB,CAAC;EACDC,UAAU,EAAE;IACVP,eAAe,EAAE;EACnB;AACF,CAAC,CAAC,CAAC;AAEH,eAAe,SAASQ,KAAK,GAAG;EAAA;EAC9B,MAAMC,OAAO,GAAGd,SAAS,EAAE;;EAE3B;EACA,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACA,eAAe2B,SAAS,GAAG;IACzB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,GAAG,CAC9B,8HAA8H,CAC/H;MACDH,OAAO,CAACE,QAAQ,CAACH,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF;;EAEA;EACA7B,SAAS,CAAC,MAAM;IACd0B,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAI,CAACF,IAAI,EAAE;IACT,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAiB;EAC1B;;EAEA;EACA,oBACE,QAAC,KAAK;IAAC,OAAO,EAAC,MAAM;IAAC,SAAS,EAAED,OAAO,CAACZ,IAAK;IAAA,uBAC9C,QAAC,IAAI;MAAC,SAAS,EAAEY,OAAO,CAACF,UAAW;MAAC,SAAS,EAAEE,OAAO,CAACZ,IAAK;MAAA,wBAC3D,QAAC,QAAQ;QAAA,uBACP,QAAC,YAAY;UACX,OAAO,eAAE,QAAC,UAAU;YAAC,OAAO,EAAC,OAAO;YAAA,UAAEa,IAAI,CAACO;UAAI;YAAA;YAAA;YAAA;UAAA;QAAe;UAAA;UAAA;UAAA;QAAA;MAC9D,GAHWP,IAAI,CAACQ,EAAE;QAAA;QAAA;QAAA;MAAA,QAIX,eACX,QAAC,MAAM;QACL,OAAO,EAAC,WAAW;QACnB,KAAK,EAAC,SAAS;QACf,OAAO,EAAEN,SAAU;QACnB,SAAS,EAAEH,OAAO,CAACL,MAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAGnB;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACC;AAEZ;AAAC,GAhDuBI,KAAK;EAAA,QACXb,SAAS;AAAA;AAAA,KADHa,KAAK;AAgD5B;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}